{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "env": {
      "type": "String"
    },
    "administratorLogin": {
      "type": "String"
    },
    "administratorLoginPassword": {
      "type": "SecureString"
    },
    "collation": {
      "type": "String"
    },
    "databaseName": {
      "type": "String"
    },
    "testDatabaseName": {
      "type": "String",
      "defaultValue": "testdb"
    },
    "demoDatabaseName": {
      "type": "String",
      "defaultValue": "demodb"
    },
    "tier": {
      "type": "String"
    },
    "skuName": {
      "type": "String"
    },
    "maxSizeBytes": {
      "type": "Int"
    },
    "serverName": {
      "type": "String"
    },
    "sampleName": {
      "defaultValue": "",
      "type": "String"
    },
    "zoneRedundant": {
      "defaultValue": false,
      "type": "Bool"
    },
    "licenseType": {
      "defaultValue": "",
      "type": "String"
    },
    "readScaleOut": {
      "defaultValue": "Disabled",
      "type": "String"
    },
    "numberOfReplicas": {
      "defaultValue": 0,
      "type": "Int"
    },
    "minCapacity": {
      "defaultValue": "",
      "type": "String"
    },
    "autoPauseDelay": {
      "defaultValue": "",
      "type": "String"
    },
    "allowAzureIps": {
      "defaultValue": true,
      "type": "Bool"
    },
    "tagValues": {
      "defaultValue": {
      },
      "type": "Object"
    },
    "testTagValues": {
      "defaultValue": {
      },
      "type": "Object"
    },
    "demoTagValues": {
      "defaultValue": {
      },
      "type": "Object"
    },
    "storageAccessTier": {
      "type": "string",
      "defaultValue": "Cool"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dataStorageAccountName": "[concat('nrxcbsnyssdatast', parameters('env'))]",
    "platformAgreementsContainerName": "nyss-agreements-container"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('serverName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2017-10-01-preview",
          "name": "[parameters('databaseName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
          ],
          "tags": "[parameters('tagValues')]",
          "sku": {
            "name": "[parameters('skuName')]",
            "tier": "[parameters('tier')]"
          },
          "properties": {
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "sampleName": "[parameters('sampleName')]",
            "zoneRedundant": "[parameters('zoneRedundant')]",
            "licenseType": "[parameters('licenseType')]",
            "readScale": "[parameters('readScaleOut')]",
            "readReplicaCount": "[parameters('numberOfReplicas')]",
            "minCapacity": "[parameters('minCapacity')]",
            "autoPauseDelay": "[parameters('autoPauseDelay')]"
          }
        },
        {
          "type": "databases",
          "condition": "[equals(variables('resourceGroupName'), 'nrx-cbsdb-dev-rg')]",
          "apiVersion": "2017-10-01-preview",
          "name": "[parameters('testDatabaseName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
          ],
          "tags": "[parameters('testTagValues')]",
          "sku": {
            "name": "[parameters('skuName')]",
            "tier": "[parameters('tier')]"
          },
          "properties": {
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "sampleName": "[parameters('sampleName')]",
            "zoneRedundant": "[parameters('zoneRedundant')]",
            "licenseType": "[parameters('licenseType')]",
            "readScale": "[parameters('readScaleOut')]",
            "readReplicaCount": "[parameters('numberOfReplicas')]",
            "minCapacity": "[parameters('minCapacity')]",
            "autoPauseDelay": "[parameters('autoPauseDelay')]"
          }
        },
        {
          "type": "databases",
          "condition": "[equals(variables('resourceGroupName'), 'nrx-cbsdb-dev-rg')]",
          "apiVersion": "2017-10-01-preview",
          "name": "[parameters('demoDatabaseName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
          ],
          "tags": "[parameters('demoTagValues')]",
          "sku": {
            "name": "[parameters('skuName')]",
            "tier": "[parameters('tier')]"
          },
          "properties": {
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "sampleName": "[parameters('sampleName')]",
            "zoneRedundant": "[parameters('zoneRedundant')]",
            "licenseType": "[parameters('licenseType')]",
            "readScale": "[parameters('readScaleOut')]",
            "readReplicaCount": "[parameters('numberOfReplicas')]",
            "minCapacity": "[parameters('minCapacity')]",
            "autoPauseDelay": "[parameters('autoPauseDelay')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "name": "AllowAllWindowsAzureIps",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
          ],
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "condition": "[parameters('allowAzureIps')]"
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('dataStorageAccountName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": "[parameters('tagValues')]",
      "properties": {
        "accessTier": "[parameters('storageAccessTier')]",
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "resources": [
        {
          "name": "default",
          "type": "blobServices",
          "apiVersion": "2018-07-01",
          "properties": {
            "deleteRetentionPolicy": {
              "enabled": true,
              "days": 30
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('dataStorageAccountName'))]"
          ],
          "resources": [
            {
              "name": "[variables('platformAgreementsContainerName')]",
              "type": "containers",
              "apiVersion": "2018-07-01",
              "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('dataStorageAccountName'), '/blobServices/default')]"
              ]
            },
            {
              "name": "nyss-agreements-container-test",
              "condition": "[equals(variables('resourceGroupName'), 'nrx-cbsdb-dev-rg')]",
              "type": "containers",
              "apiVersion": "2018-07-01",
              "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('dataStorageAccountName'), '/blobServices/default')]"
              ]
            }
          ]
        }
      ]
    }
  ]
}
